version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - MODEL_ID=${MODEL_ID}
      - HF_TOKEN=${HF_TOKEN}
      - STARCODER2_API_TOKEN=${STARCODER2_API_TOKEN}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - MAX_NEW_TOKENS_LIMIT=${MAX_NEW_TOKENS_LIMIT}
      - RATE_LIMIT=${RATE_LIMIT}
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    volumes:
      - huggingface_cache:/root/.cache/huggingface
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.49.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:10.3.3
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  huggingface_cache:
  prometheus_data:
  grafana_data:
